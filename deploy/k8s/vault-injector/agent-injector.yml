apiVersion: v1
kind: Endpoints
metadata:
  name: vault-agent-injector-leader
  namespace: vault
---
apiVersion: v1
kind: Service
metadata:
  name: vault-agent-injector-svc
  labels:
    app.kubernetes.io/name: vault-injector
    app.kubernetes.io/instance: vault
  namespace: vault
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: vault-injector
    app.kubernetes.io/instance: vault
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-injector
  labels:
    app.kubernetes.io/name: vault-injector
    app.kubernetes.io/instance: vault
  namespace: vault
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: vault-injector
      app.kubernetes.io/instance: vault
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault-injector
        app.kubernetes.io/instance: vault
    spec:
      serviceAccount: vault-agent-injector
      serviceAccountName: vault-agent-injector
      containers:
        - name: leader-elector
          image: k8s.gcr.io/leader-elector:0.4
          args:
            - --election=vault-agent-injector-leader
            - --election-namespace=$(NAMESPACE)
            - --http=0.0.0.0:4040
            - --ttl=60s
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /
              port: 4040
              scheme: HTTP
            failureThreshold: 2
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 4040
              scheme: HTTP
            failureThreshold: 2
            initialDelaySeconds: 2
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
        - name: sidecar-injector
          image: hashicorp/vault-k8s:0.10.0
          imagePullPolicy: IfNotPresent
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AGENT_INJECT_LISTEN
              value: :8080
            - name: AGENT_INJECT_LOG_LEVEL
              value: info
            - name: AGENT_INJECT_VAULT_ADDR
              value: http://vault.$(NAMESPACE).svc:8200
            - name: AGENT_INJECT_VAULT_AUTH_PATH
              value: auth/kubernetes
            - name: AGENT_INJECT_VAULT_IMAGE
              value: vault:1.7.1
            - name: AGENT_INJECT_TLS_AUTO
              value: vault-agent-injector-cfg
            - name: AGENT_INJECT_TLS_AUTO_HOSTS
              value: "vault-agent-injector-svc,vault-agent-injector-svc.$(NAMESPACE),vault-agent-injector-svc.$(NAMESPACE).svc"
            - name: AGENT_INJECT_USE_LEADER_ELECTOR
              value: "true"
            - name: AGENT_INJECT_REVOKE_ON_SHUTDOWN
              value: "false"
            - name: AGENT_INJECT_CPU_REQUEST
              value: 250m
            - name: AGENT_INJECT_CPU_LIMIT
              value: 500m
            - name: AGENT_INJECT_MEM_REQUEST
              value: 64Mi
            - name: AGENT_INJECT_MEM_LIMIT
              value: 128Mi
            - name: AGENT_INJECT_DEFAULT_TEMPLATE
              value: map
          args:
            - agent-inject
            - 2>&1
          livenessProbe:
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            failureThreshold: 2
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            failureThreshold: 2
            initialDelaySeconds: 2
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 100
